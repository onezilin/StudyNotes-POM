<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- 扫描service、dao组件 -->
    <context:component-scan base-package="com.studynotes"/>
    <!-- 分解配置 jdbc.properites -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 数据源Druid -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 1.1、添加 JobDetail，继承 QuartzJobBean 的方式 -->
    <bean id="jobDetail1" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.studynotes.demo12_spring.MyJobBean"/>
        <property name="name" value="myJob1"/>
        <property name="group" value="jobGroup"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="count" value="1"/>
            </map>
        </property>
    </bean>
    <!-- 1.2、添加 JobDetail，使用 MethodInvokingJobDetailFactoryBean 指定执行方法的方式 -->
    <bean id="jobDetail2" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetClass" value="com.studynotes.demo12_spring.MyJobMethodInvoke"/>
        <property name="targetMethod" value="executeInternal"/>
        <property name="name" value="myJob2"/>
        <property name="group" value="jobGroup"/>
        <!-- <property name="jobDataAsMap"> -->
        <!--    <map> -->
        <!--        <entry key="count" value="1"/> -->
        <!--    </map> -->
        <!-- </property> -->
    </bean>

    <!-- 2、添加 Trigger -->
    <bean id="cronTrigger1" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobDetail1"/>
        <property name="cronExpression" value="0/5 * * * * ?"/>
        <property name="name" value="myTrigger1"/>
        <property name="group" value="triggerGroup"/>
    </bean>
    <bean id="cronTrigger2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobDetail2"/>
        <property name="cronExpression" value="0/5 * * * * ?"/>
        <property name="name" value="myTrigger2"/>
        <property name="group" value="triggerGroup"/>
    </bean>

    <!-- 3、添加 Scheduler -->
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTrigger1"/>
                <ref bean="cronTrigger2"/>
            </list>
        </property>
        <property name="overwriteExistingJobs" value="true"/>
        <property name="autoStartup" value="true"/>
        <property name="startupDelay" value="5"/>
    </bean>
</beans>
